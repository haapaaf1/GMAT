% GMAT Script File
% GMAT Release Build 4.2, August 2005
% Created 7/5/2005, at Thinking Systems, Inc.


% Uncomment to use SLP
GMAT SolarSystem.Ephemeris = {DE405, SLP};
GMAT SolarSystem.EphemerisUpdateInterval = 0.0;


% Uncomment to use analytic
%GMAT SolarSystem.Ephemeris = {Analytic};


Create Spacecraft sat;
GMAT sat.CoordinateSystem = EarthMJ2000Eq;
GMAT sat.J2000BodyName = Earth;
GMAT sat.Epoch = 21558.8;
GMAT sat.DisplayStateType = Keplerian;
GMAT sat.SMA = 6995;
GMAT sat.ECC = 0.003;
GMAT sat.INC = 20;
GMAT sat.RAAN = 77;
GMAT sat.AOP = 96;
GMAT sat.TA = 0;
GMAT sat.AnomalyType = TA;
GMAT sat.DryMass = 850;
GMAT sat.DateFormat = TAIModJulian;
GMAT sat.Cd = 2.2;
GMAT sat.Cr = 1.8;
GMAT sat.DragArea = 5;
GMAT sat.SRPArea = 2.5;
GMAT sat.TotalMass = 1850;


Create Spacecraft clone;
%%% added clone = sat before mission sequence to show new value in the resource tree
%%%GMAT clone = sat;


Create ForceModel TTM_ForceModel;
GMAT TTM_ForceModel.CentralBody = Earth;
GMAT TTM_ForceModel.PrimaryBodies = {Earth};
GMAT TTM_ForceModel.PointMasses = {Luna, Sun};
GMAT TTM_ForceModel.Drag = None;
GMAT TTM_ForceModel.SRP = Off;


Create Propagator TTM_Prop;
GMAT TTM_Prop.FM = TTM_ForceModel;
GMAT TTM_Prop.Type = PrinceDormand78;;
GMAT TTM_Prop.InitialStepSize = 60;
GMAT TTM_Prop.Accuracy = 1e-012;
GMAT TTM_Prop.MinStep = 1e-6;
GMAT TTM_Prop.MaxStep = 2700;
GMAT TTM_Prop.MaxStepAttempts = 50;


Create ForceModel TTM_NoMoon_ForceModel;
GMAT TTM_NoMoon_ForceModel.CentralBody = Earth;
GMAT TTM_NoMoon_ForceModel.PrimaryBodies = {Earth};
GMAT TTM_NoMoon_ForceModel.PointMasses = {Sun};
GMAT TTM_NoMoon_ForceModel.Drag = None;
GMAT TTM_NoMoon_ForceModel.SRP = Off;


Create Propagator TTM_NoMoon_Prop;
GMAT TTM_NoMoon_Prop.FM = TTM_NoMoon_ForceModel;
GMAT TTM_NoMoon_Prop.Type = PrinceDormand78;;
GMAT TTM_NoMoon_Prop.InitialStepSize = 60;
GMAT TTM_NoMoon_Prop.Accuracy = 1e-012;
GMAT TTM_NoMoon_Prop.MinStep = 1e-6;
GMAT TTM_NoMoon_Prop.MaxStep = 2700;
GMAT TTM_NoMoon_Prop.MaxStepAttempts = 50;


Create ForceModel ATM_ForceModel;
GMAT ATM_ForceModel.CentralBody = Luna;
GMAT ATM_ForceModel.PointMasses = {Luna, Sun, Earth};
GMAT ATM_ForceModel.Drag = None;
GMAT ATM_ForceModel.SRP = Off;


Create Propagator ATM_Prop;
GMAT ATM_Prop.FM = ATM_ForceModel;
GMAT ATM_Prop.Type = RungeKutta89;;
GMAT ATM_Prop.InitialStepSize = 60;
GMAT ATM_Prop.Accuracy = 1e-13;
GMAT ATM_Prop.MinStep = 1e-3;
GMAT ATM_Prop.MaxStep = 2700;
GMAT ATM_Prop.MaxStepAttempts = 50;


Create ImpulsiveBurn TOI;
GMAT TOI.Axes = VNB;
GMAT TOI.VectorFormat = Cartesian;
GMAT TOI.Element1 = 0.0001;
GMAT TOI.Element2 = 0;
GMAT TOI.Element3 = 0;


Create ImpulsiveBurn LOI;
GMAT LOI.Origin = Luna;
GMAT LOI.Axes = VNB;
GMAT LOI.VectorFormat = Cartesian;
GMAT LOI.V = -0.75;
GMAT LOI.N = 0;
GMAT LOI.B = 0;


Create DifferentialCorrector DC;
GMAT DC.TargeterTextFile = ProblemWithPropDir-DC.data;
GMAT DC.MaximumIterations = 25;


Create CoordinateSystem EarthMJ2000Eq;
GMAT EarthMJ2000Eq.Origin = Earth;
GMAT EarthMJ2000Eq.J2000Body = Earth;
GMAT EarthMJ2000Eq.Axes = MJ2000Eq;


Create CoordinateSystem EarthMJ2000Ec;
GMAT EarthMJ2000Ec.Origin = Earth;
GMAT EarthMJ2000Ec.J2000Body = Earth;
GMAT EarthMJ2000Ec.Axes = MJ2000Ec;


Create CoordinateSystem EarthFixed;
GMAT EarthFixed.Origin = Earth;
GMAT EarthFixed.J2000Body = Earth;
GMAT EarthFixed.Axes = BodyFixed;


Create CoordinateSystem MoonFixed;
GMAT MoonFixed.Origin = Luna; 
GMAT MoonFixed.J2000Body = Earth;
GMAT MoonFixed.Axes = BodyFixed;


Create CoordinateSystem MoonMJ2000Ec;
GMAT MoonMJ2000Ec.Origin = Luna;
GMAT MoonMJ2000Ec.J2000Body = Earth;
GMAT MoonMJ2000Ec.Axes = MJ2000Ec;


Create CoordinateSystem EMRotating;
GMAT EMRotating.Origin = Earth;
GMAT EMRotating.J2000Body = Earth;
GMAT EMRotating.Axes = ObjectReferenced;
GMAT EMRotating.Epoch = 21545.000000397937;
GMAT EMRotating.UpdateInterval = 60;
GMAT EMRotating.XAxis = R;
GMAT EMRotating.ZAxis = N;
GMAT EMRotating.Primary = Earth;
GMAT EMRotating.Secondary = Luna;


Create ReportFile rf;
GMAT rf.Filename = ProblemWithPropDir.report;

Create OpenGLPlot MoonEqPlot;
GMAT MoonEqPlot.Add = {Earth, Luna, Sun, sat};
GMAT MoonEqPlot.CoordinateSystem = MoonMJ2000Ec;
GMAT MoonEqPlot.ViewPointReference = Luna;
GMAT MoonEqPlot.ViewDirection = Luna;
GMAT MoonEqPlot.ViewScaleFactor = 1;
GMAT MoonEqPlot.SolverIterations = All;


Create OpenGLPlot EarthFixedPlot;
GMAT EarthFixedPlot.Add = {Earth, Luna, Sun, sat};
GMAT EarthFixedPlot.CoordinateSystem = EarthFixed;
GMAT EarthFixedPlot.ViewPointReference = Earth;
GMAT EarthFixedPlot.ViewPointVector = Vector;
GMAT EarthFixedPlot.ViewDirection = Earth;
GMAT EarthFixedPlot.ViewScaleFactor = 1;
GMAT EarthFixedPlot.CelestialPlane = On;
GMAT EarthFixedPlot.XYPlane = Off;
GMAT EarthFixedPlot.WireFrame = Off;
GMAT EarthFixedPlot.SolverIterations = All;


%Create OpenGLPlot EarthMoonRotatingPlot;
%GMAT EarthMoonRotatingPlot.Add = {sat, Luna};
%GMAT EarthMoonRotatingPlot.CoordinateSystem = EMRotating;
%GMAT EarthMoonRotatingPlot.ViewPointReference = Earth;
%GMAT EarthMoonRotatingPlot.ViewPointVector = Vector;
%GMAT EarthMoonRotatingPlot.ViewDirection = Earth;
%GMAT EarthMoonRotatingPlot.ViewScaleFactor = 1;
%GMAT EarthMoonRotatingPlot.FixedFovAngle = 45;
%GMAT EarthMoonRotatingPlot.ViewUpCoordinateSystem = EMRotating;
%GMAT EarthMoonRotatingPlot.ViewUpAxis = Z;
%GMAT EarthMoonRotatingPlot.CelestialPlane = Off;
%GMAT EarthMoonRotatingPlot.XYPlane = On;
%GMAT EarthMoonRotatingPlot.WireFrame = Off;
%GMAT EarthMoonRotatingPlot.SolverIterations = None;
%GMAT EarthMoonRotatingPlot.Axes = Off;
%GMAT EarthMoonRotatingPlot.SunLine = Off;
%GMAT EarthMoonRotatingPlot.UseFixedFov = Off;


Create XYPlot TargetTOI;
GMAT TargetTOI.IndVar = clone.A1ModJulian;
GMAT TargetTOI.Add = {clone.Luna.RMAG, clone.Earth.RMAG};
GMAT TargetTOI.Grid = Off;
GMAT TargetTOI.SolverIterations = All;


Create XYPlot OrbitingLuna;
GMAT OrbitingLuna.IndVar = sat.A1ModJulian;
GMAT OrbitingLuna.Add = {sat.Luna.RMAG};
GMAT OrbitingLuna.Grid = On;


Create Variable vComp;
Create Variable i;

% -------------------------------------------------------------------------
% --------------------------- Mission Sequence ----------------------------
% -------------------------------------------------------------------------
Toggle EarthFixedPlot On;
Toggle OrbitingLuna Off;
Toggle TargetTOI Off;
Toggle MoonEqPlot Off;

Report rf sat.A1ModJulian sat.X sat.Y sat.Z;

% Stay in LEO for a day
Propagate TTM_Prop(sat, {sat.ElapsedSecs = 86400});
GMAT rf.WriteHeaders = Off;
Report rf sat.A1ModJulian sat.X sat.Y sat.Z;


% Prop to the the TA needed for TOI
Propagate TTM_Prop(sat, {sat.TA = 85});
Report rf sat.A1ModJulian sat.X sat.Y sat.Z;


% Target the TOI burn so that we end up at the correct lunar altitude.
% The Moon is turned off in this phase to prevent lunar perts from
% disturbing the apaoapsis stopping condition.
GMAT clone = sat;


% Toggling graphics on and off really speeds things up!
Toggle TargetTOI On;
Toggle EarthFixedPlot Off;


% First target the burn to get to the vicinity of the Moon
Target DC;
   Vary DC(TOI.V = 3.0, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.1});
   Maneuver TOI(clone);
   Propagate TTM_NoMoon_Prop(clone, {clone.Apoapsis});
   Achieve DC(clone.Earth.RMAG = 362000, {Tolerance = 0.1});
EndTarget;  % For targeter DC

Report rf clone.A1ModJulian clone.X clone.Y clone.Z;

Toggle TargetTOI Off;
Toggle EarthFixedPlot On;


% Now propagate our spacecraft to the LOI position
Maneuver TOI(sat);

Propagate TTM_Prop(sat, {sat.RMAG = 200000.0});
Report rf sat.A1ModJulian sat.X sat.Y sat.Z;

Toggle EarthFixedPlot Off;
Toggle MoonEqPlot On;


Propagate ATM_Prop(sat, {sat.Luna.Periapsis});
Report rf sat.A1ModJulian sat.X sat.Y sat.Z;

Maneuver LOI(sat);

Propagate ATM_Prop(sat, {sat.Luna.Periapsis});
Report rf sat.A1ModJulian sat.X sat.Y sat.Z;

GMAT LOI.V = -0.2;
Maneuver LOI(sat);


Toggle OrbitingLuna On;


% Get loopy at Luna
For i = 1 : 8
   Propagate ATM_Prop(sat, {sat.Luna.Periapsis});
   Propagate ATM_Prop(sat, {sat.Luna.Apoapsis});
EndFor;

Report rf sat.A1ModJulian sat.X sat.Y sat.Z;

%%%Save Earth
%%%Save Mars
%%%Save Luna
