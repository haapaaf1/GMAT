# $Id$
# Eclipse makefile for the GMAT GUI
# Initial Version - D. Conway - 2005/06/17
# Modifed for Mac OS 10.3  W. Shoan - 2005.11.10

# Updated 2005/08/11.  
# This file now requires the file BuildEnv.mk in the top level folder.

include ../BuildEnv.mk

ifdef LINUX_MAC
EXTENSION =
else
EXTENSION = .exe
endif

#ifeq ($(USE_MATLAB),1)
   WXTARGET = GMAT$(EXTENSION)
#else
#   WXTARGET = GMAT_NoMatlab$(EXTENSION)
#endif

ifdef MAC_SPECIFIC
ifeq ($(USE_MATLAB),1)
TARGETS = $(WXTARGET) macstacksize macrez macosx macmatlab
else
TARGETS = $(WXTARGET) macstacksize macrez macosx macnomatlab
endif
CLEANTARGET = archclean cleanmacosx
else
TARGETS = $(WXTARGET)
CLEANTARGET = archclean
endif

ifeq ($(SHARED_BASE), 1)

ifeq ($(LINUX_MAC), 1)

ifdef MAC_SPECIFIC
SHARED_EXTENSION = .dylib
else
SHARED_EXTENSION = .so
endif

BASELIBNAME = libGmatBase
#ifeq ($(USE_MATLAB),1)
LIBS = -L../base -L../base/lib -lGmatBase
LIBNAME = ../base/lib/libGmatBase$(SHARED_EXTENSION)
#else
#LIBS = -L../base -L../base/lib -lGmatBaseNoMatlab
#LIBNAME = ../base/lib/libGmatBaseNoMatlab$(SHARED_EXTENSION)
#endif

else

#ifeq ($(USE_MATLAB),1)
LIBNAME = ../base/lib/libGmatBase.dll
LIBS = $(LIBNAME)
#else
#LIBNAME = ../base/lib/libGmatBaseNoMatlab.dll
#LIBS = $(LIBNAME)
#endif

endif


else

#ifeq ($(USE_MATLAB),1)
LIBS = ../base/lib/libGmatBase.a
#else
#LIBS = ../base/lib/libGmatBaseNoMatlab.a
#endif

endif

ifeq ($(USE_STC_EDITOR),1)
STC_EDITOR_OBJECTS = \
    view/Editor.o \
    view/EditorPanel.o \
    view/EditorPreferences.o \
    view/EditorPrintout.o \
    view/FindReplaceDialog.o
else
STC_EDITOR_OBJECTS =
endif

ifeq ($(USE_SPICE),1)
SPICE_OBJECTS = \
	 spacecraft/SpicePanel.o
else
SPICE_OBJECTS =
endif


#ifeq ($(USE_MATLAB),1)
all: prep $(TARGETS) 
	rm -f GMAT
#else
#all: prep $(TARGETS) 
#	rm -f GMAT_NoMatlab
#endif

gui: $(WXTARGET)

prep:
	mkdir -p ../../bin
	rm -f app/AboutDialog.o

HEADERS = -I../base/include \
          -I../base/asset \
          -I../base/attitude \
          -I../base/burn \
          -I../base/command \
          -I../base/configs \
          -I../base/coordsystem \
          -I../base/executive \
          -I../base/factory \
          -I../base/forcemodel \
          -I../base/foundation \
          -I../base/function \
          -I../base/hardware \
          -I../base/interface \
          -I../base/interpolator \
          -I../base/interpreter \
          -I../base/math \
          -I../base/parameter \
          -I../base/plugin \
          -I../base/propagator \
          -I../base/solarsys \
          -I../base/solver \
          -I../base/spacecraft \
          -I../base/stopcond \
          -I../base/subscriber \
          -I../base/util \
          -Iinclude \
          -Iinclude/bitmaps \
          -Iinclude/il \
          -Iapp \
          -Iasset \
          -Iburn \
          -Icommand \
          -Icontrollogic \
          -Icoordsystem \
          -Iforcemodel \
          -Ifoundation \
          -Ifunction \
          -Ihardware \
          -Imission \
          -Ioutput \
          -Ipropagator \
          -Irendering \
          -Isolarsys \
          -Isolver \
          -Ispacecraft \
          -Isubscriber \
          -Iview

clean : $(CLEANTARGET)

archclean :
	rm -rf */*.o
	rm -rf */*.a
	rm -rf */*~
	rm -rf core
	rm -rf */core
	rm -rf bin/*
	rm -rf obj/*

cleanmacosx :
	echo 'cleaning macosx apps .......'
	rm -rf $(TOP_DIR)/bin/GMAT.app
	rm -rf $(TOP_DIR)/bin/GMATNoMatlab.app

OBJECTS = \
    app/AboutDialog.o \
    app/GmatApp.o \
    app/GmatAppData.o \
    app/CompareFilesDialog.o \
    app/CompareTextDialog.o \
    app/GmatConnection.o \
    app/GmatMainFrame.o \
    app/GmatMenuBar.o \
    app/GmatToolBar.o \
    app/GuiInterpreter.o \
    app/GuiMessageReceiver.o \
    app/GmatNotebook.o \
    app/GmatServer.o \
    app/GmatTreeItemData.o \
    app/GuiPlotReceiver.o \
    app/InteractiveMatlabDialog.o \
    app/MissionTreeItemData.o \
    app/RunScriptFolderDialog.o \
    app/ResourceTree.o \
    app/ScriptPanel.o \
    app/SetPathDialog.o \
    app/TextEphemFileDialog.o \
    app/WelcomePanel.o \
    asset/GroundStationPanel.o \
    burn/FiniteBurnSetupPanel.o \
    burn/ImpulsiveBurnSetupPanel.o \
    command/AchievePanel.o \
    command/AssignmentPanel.o \
    command/BeginFiniteBurnPanel.o \
    command/CallFunctionPanel.o \
    command/EndFiniteBurnPanel.o \
    command/GmatCommandPanel.o \
    command/ManeuverPanel.o \
    command/MinimizePanel.o \
    command/NonlinearConstraintPanel.o \
    command/OptimizePanel.o \
    command/PropagatePanel.o \
    command/ReportPanel.o \
    command/SavePanel.o \
    command/ScriptEventPanel.o \
    command/TargetPanel.o \
    command/TogglePanel.o \
    command/VaryPanel.o \
    controllogic/ForDialog.o \
    controllogic/ForPanel.o \
    controllogic/IfPanel.o \
    controllogic/WhilePanel.o \
    coordsystem/CoordPanel.o \
    coordsystem/CoordSysCreateDialog.o \
    coordsystem/CoordSystemConfigPanel.o \
    forcemodel/DragInputsDialog.o \
    foundation/ArraySetupDialog.o \
    foundation/GmatDialog.o \
    foundation/GmatMdiChildFrame.o \
    foundation/GmatPanel.o \
    foundation/GmatBaseSetupPanel.o \
    foundation/GmatSavePanel.o \
    foundation/GmatStaticBoxSizer.o \
    foundation/GuiItemManager.o \
    foundation/MultiPathSetupPanel.o \
    foundation/ParameterCreateDialog.o \
    foundation/ParameterSelectDialog.o \
    foundation/ParameterSetupPanel.o \
    foundation/ShowScriptDialog.o \
    foundation/ShowSummaryDialog.o \
    foundation/SinglePathSetupPanel.o \
    foundation/UserInputValidator.o \
    function/FunctionSetupPanel.o \
    function/MatlabFunctionSetupPanel.o \
    hardware/BurnThrusterPanel.o \
    hardware/TankConfigPanel.o \
    hardware/ThrusterCoefficientDialog.o \
    hardware/ThrusterConfigPanel.o \
    mission/DecoratedTree.o \
    mission/MissionTree.o \
    output/CompareReportPanel.o \
    output/OutputTree.o \
    output/ReportFilePanel.o \
    propagator/PropagationConfigPanel.o \
    propagator/PropagatorSelectDialog.o \
    rendering/Camera.o \
    rendering/GLStars.o \
    rendering/GmatOpenGLSupport.o \
    rendering/Light.o \
    rendering/Load3ds.o \
    rendering/LoadPOV.o \
    rendering/ModelManager.o \
    rendering/ModelObject.o \
    rendering/Rendering.o \
    solarsys/BarycenterPanel.o \
    solarsys/CelesBodySelectDialog.o \
    solarsys/CelestialBodyOrbitPanel.o \
    solarsys/CelestialBodyOrientationPanel.o \
    solarsys/CelestialBodyPanel.o \
    solarsys/CelestialBodyPropertiesPanel.o \
    solarsys/LibrationPointPanel.o \
    solarsys/SolarSystemWindow.o \
    solarsys/UniversePanel.o \
    solver/DCSetupPanel.o \
    solver/SQPSetupPanel.o \
    solver/SolverCreatePanel.o \
    solver/SolverGoalsPanel.o \
    solver/SolverSetupPanel.o \
    solver/SolverVariablesPanel.o \
    spacecraft/AttitudePanel.o \
    spacecraft/BallisticsMassPanel.o \
    spacecraft/FormationSetupPanel.o \
    spacecraft/OrbitPanel.o \
    spacecraft/SpacecraftPanel.o \
    spacecraft/SpaceObjectSelectDialog.o \
    spacecraft/TankPanel.o \
    spacecraft/ThrusterPanel.o \
    spacecraft/VisualModelCanvas.o \
    spacecraft/VisualModelPanel.o \
    subscriber/EphemerisFilePanel.o \
    subscriber/MdiChild3DViewFrame.o \
    subscriber/MdiChildViewFrame.o \
    subscriber/MdiChildTsFrame.o \
    subscriber/MdiGlPlotData.o \
    subscriber/MdiTsPlotData.o \
    subscriber/Enhanced3DViewPanel.o \
    subscriber/ReportFileSetupPanel.o \
    subscriber/SubscriberSetupPanel.o \
    subscriber/ViewCanvas.o \
    subscriber/Enhanced3DViewCanvas.o \
    subscriber/TsPlotCanvas.o \
    subscriber/TsPlotXYCanvas.o \
    subscriber/TsPlotCurve.o \
    subscriber/TsPlotOptionsDialog.o \
    subscriber/XyPlotSetupPanel.o \
    view/ViewTextDialog.o \
    view/ViewTextFrame.o \
    $(STC_EDITOR_OBJECTS) \
    $(SPICE_OBJECTS)

ifeq ($(SHARED_BASE), 1)

ifdef MAC_SPECIFIC
$(WXTARGET) : $(OBJECTS) $(LIBNAME)
	$(CPP) $(OBJECTS) $(LIBS) -o $(WXTARGET) $(LINK_FLAGS)
	cp -f $(WXTARGET) ../../bin/.
	cp -f $(LIBNAME) ../../bin/.
else

ifeq ($(LINUX_MAC), 1)
$(WXTARGET) : $(OBJECTS) $(LIBNAME)
	$(CPP) $(OBJECTS) $(LIBS) -o $(WXTARGET) $(LINK_FLAGS)
	mv -f $(WXTARGET)* ../../bin/.
	cp -f $(LIBNAME) ../../bin/.
else
$(WXTARGET) : $(OBJECTS) $(GMAT_ICON_O) $(LIBNAME)
	$(CPP) $(OBJECTS) $(GMAT_ICON_O) $(LIBS) -o $(WXTARGET) $(LINK_FLAGS)
	mv -f $(WXTARGET)* ../../bin/.
	cp -f $(LIBNAME) ../../bin/.
endif

endif

else

ifdef MAC_SPECIFIC
$(WXTARGET) : $(OBJECTS) $(LIBS)
	$(CPP) $(OBJECTS) $(LIBS) -o $(WXTARGET) $(LINK_FLAGS)
	cp -f $(WXTARGET) ../../bin/.
else

ifeq ($(LINUX_MAC), 1)
$(WXTARGET) : $(OBJECTS) $(LIBS)
	$(CPP) $(OBJECTS) $(LIBS) -o $(WXTARGET) $(LINK_FLAGS)
	mv -f $(WXTARGET)* ../../bin/.
else
$(WXTARGET) : $(OBJECTS) $(GMAT_ICON_O) $(LIBS)
	$(CPP) $(OBJECTS) $(GMAT_ICON_O) $(LIBS) -o $(WXTARGET) $(LINK_FLAGS)
	mv -f $(WXTARGET)* ../../bin/.
endif

endif

endif

macrez:
	echo "linking Carbon and wx resource files ......."
	$(REZ) -d WXUSINGDLL -o $(WXTARGET)
	cp -f $(WXTARGET) ../../bin/.
#	@chmod -R 755 ../../bin
#  $(REZ) -o $(WXTARGET)

macosx: 
	echo "building Mac application bundle ......."
	/Developer/Tools/SetFile -a C $(TOP_DIR)/bin/$(WXTARGET)
	mkdir -p $(CONTENTS_DIR)
	mkdir -p $(MACOS_DIR)
	mkdir -p $(RES_DIR)
	mkdir -p $(LIBS_DIR)

#  echo -n "APPL????" > $(MAC_PKGINFO)
#  ln -f $(TOP_DIR)/bin/$(WXTARGET) $(MAC_APP)
#  cp -f $(GMAT_ICONS) $(MAC_ICONS) 
#  ./install_libs_into_bundle

macmatlab:
	sed -e "s/IDENTIFIER/`echo GMAT | sed -e 's,\.\./,,g' | \
	sed -e 's,/,.,g'`/" -e "s/EXECUTABLE/RunGMATML/" $(GMAT_INFO) >$(MAC_PKG)
	echo -n "APPL????" > $(MAC_PKGINFO)
	ln -f $(TOP_DIR)/bin/$(WXTARGET) $(MAC_APP)
	ln -f $(TOP_DIR)/src/gui/RunGMATML $(MAC_SCRIPT_DIR)/RunGMATML
	cp -f $(GMAT_ICONS) $(MAC_ICONS) 
	./$(INSTALL_WX_LIBS) GMAT ../base/lib $(BASELIBNAME)

macnomatlab:
	sed -e "s/IDENTIFIER/`echo GMAT | sed -e 's,\.\./,,g' | \
	sed -e 's,/,.,g'`/" -e "s/EXECUTABLE/RunGMAT/" $(GMAT_INFO) >$(MAC_PKG)
	echo -n "APPL????" > $(MAC_PKGINFO)
	ln -f $(TOP_DIR)/bin/$(WXTARGET) $(MAC_APP)
	ln -f $(TOP_DIR)/src/gui/RunGMAT $(MAC_SCRIPT_DIR)/RunGMAT
	cp -f $(GMAT_ICONS) $(MAC_ICONS) 
	./$(INSTALL_WX_LIBS) GMAT ../base/lib $(BASELIBNAME)

macstacksize:
	echo "setting stack size needed for SPICE"
	$(SPICE_STACKSIZE)

#macnomatlab:
#	sed -e "s/IDENTIFIER/`echo GMAT | sed -e 's,\.\./,,g' | \
#	sed -e 's,/,.,g'`/" -e "s/EXECUTABLE/GMAT/" $(GMAT_INFO) >$(MAC_PKG)
#	echo -n "APPL????" > $(MAC_PKGINFO)
#	ln -f $(TOP_DIR)/bin/$(WXTARGET) $(MAC_APP)
#	cp -f $(GMAT_ICONS) $(MAC_ICONS) 
#	./$(INSTALL_WX_LIBS) GMATNoMatlab
#	./install_libs_into_bundle

.cpp.o:
	$(CPP) $(CPPFLAGS) $(HEADERS) -c -o $@ $<

.c.o:
	$(C) $(CPPFLAGS) $(HEADERS) -c -o $@ $<

$(GMAT_ICON_O):
	windres -o $(GMAT_ICON_O) $(GMAT_ICON_RC)
