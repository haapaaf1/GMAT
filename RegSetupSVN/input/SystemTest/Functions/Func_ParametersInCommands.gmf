function Func_ParametersInCommands(reportLoc)
% $Id: Func_ParametersInCommands.gmf,v 1.4 2008/07/21 21:25:00 edove Exp $

%  This script is for testing the use of variables, s/c parameters, numbers, and array 
%  elements in stopping conditions, vary, achieve, minimize, and nonlinear constraint commands.
%  Note:  there are other scripts that test control flow (written by Edwin Dove)!
%
%  For this test script to pass all tests, all portions that are followed by lines that saye
%  " %--- NEEDS FIXING  ", must be uncommented, and the  The report called ParametersInCommands_Report.txt 
%  should contain a column of all ones, or numbers very near one (Stopping condition does not stop exactly at 1.0)
%
%  Notes:  DO NOT CHANGE the initial state values of Sat2, ArrayZero,ArrayOne, ArrayTwo, Zero, One, Two!!!
%  These values are used in the tests and the numeric values that have been assigned to them are important!!!
%  
%  S. Hughes

Create Spacecraft Sat;
GMAT Sat.DateFormat = TAIModJulian;
GMAT Sat.Epoch = 21545.000000000;
GMAT Sat.CoordinateSystem = EarthMJ2000Eq;
GMAT Sat.DisplayStateType = Cartesian;
GMAT Sat.X = 7100;
GMAT Sat.Y = 0;
GMAT Sat.Z = 1300;
GMAT Sat.VX = 0;
GMAT Sat.VY = 7.35;
GMAT Sat.VZ = 1;
GMAT Sat.DryMass = 850;
GMAT Sat.Cd = 2.2;
GMAT Sat.Cr = 1.8;
GMAT Sat.DragArea = 15;
GMAT Sat.SRPArea = 1;

Create Spacecraft Sat2;
GMAT Sat2.DateFormat = TAIModJulian;
GMAT Sat2.Epoch = 21545.000000000;
GMAT Sat2.CoordinateSystem = EarthMJ2000Eq;
GMAT Sat2.DisplayStateType = Cartesian;
GMAT Sat2.X = 7100;
GMAT Sat2.Y = 1;   %  Do NOT change this value, it is used in the tests below!!!!
GMAT Sat2.Z = 1300;
GMAT Sat2.VX = 0;
GMAT Sat2.VY = 7.35;  
GMAT Sat2.VZ = 2;  %  Do NOT change this value, it is used in the tests below!!!!
GMAT Sat2.DryMass = 850;
GMAT Sat2.Cd = 2.2;
GMAT Sat2.Cr = 1.8;
GMAT Sat2.DragArea = 15;
GMAT Sat2.SRPArea = 1;

Create ForceModel LowEarth_ForceModel;
GMAT LowEarth_ForceModel.CentralBody = Earth;
GMAT LowEarth_ForceModel.PointMasses = {Earth};
GMAT LowEarth_ForceModel.Drag = None;
GMAT LowEarth_ForceModel.SRP = Off;
GMAT LowEarth_ForceModel.ErrorControl = RSSStep;

Create Propagator LowEarth;
GMAT LowEarth.FM = LowEarth_ForceModel;
GMAT LowEarth.Type = RungeKutta89;
GMAT LowEarth.InitialStepSize = 60;
GMAT LowEarth.Accuracy = 9.999999999999999e-012;
GMAT LowEarth.MinStep = 0.001;
GMAT LowEarth.MaxStep = 2700;
GMAT LowEarth.MaxStepAttempts = 50;

Create Variable Zero One Two  LoopCheck Var
GMAT Zero = 0;
GMAT One = 1;
GMAT Two = 2;
GMAT LoopCheck = 0;

Create Array ArrayZero[2, 2];

Create Array ArrayOne[2, 2];
GMAT ArrayOne(1, 1) = 0;
GMAT ArrayOne(1, 2) = 0;
GMAT ArrayOne(2, 1) = 0;
GMAT ArrayOne(2, 2) = 1;

Create Array ArrayTwo[2, 2];
GMAT ArrayTwo(1, 1) = 0;
GMAT ArrayTwo(1, 2) = 0;
GMAT ArrayTwo(2, 1) = 0;
GMAT ArrayTwo(2, 2) = 2;

Create Array MyArray[2,2];

Create DifferentialCorrector DC;
GMAT DC.ShowProgress = true;
GMAT DC.ReportStyle = Normal;
GMAT DC.TargeterTextFile = 'DifferentialCorrectorDC1.data';
GMAT DC.MaximumIterations = 25;
GMAT DC.UseCentralDifferences = false;

Create ReportFile Data;
GMAT Data.Filename = reportLoc;
GMAT Data.WriteHeaders = Off;

%-------------------------------------------------------------------
%---- Test different types of variables in stopping conditions -----
%-------------------------------------------------------------------

%  Test variable on RHS
Propagate LowEarth(Sat, {Sat.EarthMJ2000Eq.Z = One});
Report Data Sat.EarthMJ2000Eq.Z

%  Test Number on RHS
Propagate LowEarth(Sat, {Sat.EarthMJ2000Eq.Z = 1});
Report Data Sat.EarthMJ2000Eq.Z

%  Test s/c parameter on RHS
Propagate LowEarth(Sat, {Sat.EarthMJ2000Eq.X = Sat2.EarthMJ2000Eq.Y});
Report Data Sat2.EarthMJ2000Eq.Y

%--- NEEDS FIXING
%--********** Currently Fails
%  Test Array Element on RHS
%Propagate  LowEarth(Sat, {Sat.EarthMJ2000Eq.Z = ArrayOne(2,2)});
%Report Data Sat.EarthMJ2000Eq.Z
%--**************************

%---------- Maybe someday we should worry about those below... not right now though.

%--********** Currently Fails
%  Test variable on LHS
%  Propagate LowEarth(Sat, {One = Sat.EarthMJ2000Eq.Z});
%  Report Data Sat.EarthMJ2000Eq.Z
%--**************************

%--********** Currently Fails
%  Test Number on LHS  
%  Propagate LowEarth(Sat, {1 = Sat.EarthMJ2000Eq.Z});
%  Report Data Sat.EarthMJ2000Eq.Z
%--**************************

%-------------------------------------------------------------------
%----- Test different types of variables in Vary and Achieve -------
%-------------------------------------------------------------------

%---- Try number in RHS of Vary and Achieve
GMAT LoopCheck = 0;
Target DC;

   Vary DC( Sat.VX = 0 , {Upper = 10000, Lower = -10000, Perturbation = 0.001} );
   Achieve DC( Sat.VX  = 1, {Tolerance = .000000001} );

EndTarget;
Report Data Sat.VX;

%---- Try variable in RHS of Vary and Achieve
GMAT LoopCheck = 0;
Target DC;

   Vary DC( Sat.VX = Zero , {Upper = 10000, Lower = -10000, Perturbation = 0.001} );
   Achieve DC( Sat.VX  = One, {Tolerance = .000000001} );

EndTarget;
Report Data Sat.VX;

%---- Try s/c parameter in RHS of Vary and Achieve
GMAT LoopCheck = 0;
Target DC;

   Vary DC( Sat.VX = Sat2.VX , {Upper = 10000, Lower = -10000, Perturbation = 0.001} );
   Achieve DC( Sat.VX  = Sat2.Y, {Tolerance = .000000001} );

EndTarget;
Report Data Sat.VX;

%---- Try array element in RHS of Vary and Achieve
GMAT LoopCheck = 0;
Target DC;

   Vary    DC( Sat.VX = ArrayZero(1,1) , {Upper = 10000, Lower = -10000, Perturbation = 0.001} );
   Achieve DC( Sat.VX  = ArrayOne(2,2), {Tolerance = .000000001} );

EndTarget;
Report Data Sat.VX;

%%---- Try variable in LHS of Vary and Achieve
%GMAT LoopCheck = 0;
Target DC;

   Vary    DC( Var = 0 , {Upper = 10000, Lower = -10000, Perturbation = 0.001} );
   Achieve DC( Var = 1, {Tolerance = .000000001} );

EndTarget;
Report Data Sat.VX;

%%---- Try Array in LHS of Vary and Achieve
%GMAT LoopCheck = 0;
Target DC;

   Vary    DC( MyArray(2,2) = 0 , {Upper = 10000, Lower = -10000, Perturbation = 0.001} );
   Achieve DC( MyArray(2,2) = 1, {Tolerance = .000000001} );

EndTarget;
Report Data Sat.VX;

%-----------------------------------------------------------------------
% Test different types of variables in Minimize and NonLinear Constraint 
%-----------------------------------------------------------------------


