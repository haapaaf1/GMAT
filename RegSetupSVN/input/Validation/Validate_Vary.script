%  Script Mission - Hohmann Transfer Example
%
%  This script demonstrates how to target a Hohmann Transfer
%
%  REVSION HISTORY
%  $Id: Validate_Vary.script,v 1.1 2007/12/03 16:32:48 wshoan Exp $

Create Spacecraft Sat WrongSat;
Create Thruster Thruster WrongThruster;
Create FuelTank WrongTank;
Create Formation Formation WrongFormation
Create ImpulsiveBurn ImpBurn WrongImpBurn
Create FiniteBurn FiniteBurn WrongFiniteBurn
Create Propagator Prop WrongProp
Create OpenGLPlot OpenGL WrongOpenGL
%Create XYPlot XYPlot WrongXYPlot
Create XYPlot XYPlot1 WrongXYPlot
XYPlot1.IndVar = Sat.X;
WrongXYPlot.IndVar = WrongSat.X;
Create ReportFile ReportFile WrongReportFile
Create Variable Var WrongVar
Create Array Array[3,3] WrongArray[3,3]
Create CoordinateSystem CoordSys WrongCoordSys;
Create String WrongString;


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft sat;
GMAT sat.DateFormat = TAIModJulian;
GMAT sat.Epoch = 21545;
GMAT sat.CoordinateSystem = EarthMJ2000Eq;
GMAT sat.DisplayStateType = Cartesian;
GMAT sat.X = 7100;
GMAT sat.Y = 0;
GMAT sat.Z = 1300;
GMAT sat.VX = 0;
GMAT sat.VY = 7.3499999999999996;
GMAT sat.VZ = 1;
GMAT sat.DryMass = 850;
GMAT sat.Cd = 2.2;
GMAT sat.Cr = 1.8;
GMAT sat.DragArea = 15;
GMAT sat.SRPArea = 1;

%----------------------------------------
%---------- ForceModels and Propagators
%----------------------------------------

Create ForceModel DefaultProp_ForceModel;
GMAT DefaultProp_ForceModel.CentralBody = Earth;
GMAT DefaultProp_ForceModel.PointMasses = {Earth};
GMAT DefaultProp_ForceModel.Drag = None;
GMAT DefaultProp_ForceModel.SRP = Off;
GMAT DefaultProp_ForceModel.ErrorControl = RSSStep;


Create Propagator DefaultProp;
GMAT DefaultProp.FM = DefaultProp_ForceModel;
GMAT DefaultProp.Type = RungeKutta89;
GMAT DefaultProp.InitialStepSize = 120;
GMAT DefaultProp.Accuracy = 9.9999999999999994e-012;
GMAT DefaultProp.MinStep = 0.001;
GMAT DefaultProp.MaxStep = 2700;
GMAT DefaultProp.MaxStepAttempts = 50;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn TOI;
GMAT TOI.Origin = Earth;
GMAT TOI.Axes = VNB;
GMAT TOI.VectorFormat = Cartesian;
GMAT TOI.Element1 = 0.0001;
GMAT TOI.Element2 = 0;
GMAT TOI.Element3 = 0;


Create ImpulsiveBurn GOI;
GMAT GOI.Origin = Earth;
GMAT GOI.Axes = VNB;
GMAT GOI.VectorFormat = Cartesian;
GMAT GOI.Element1 = 0;
GMAT GOI.Element2 = 0;
GMAT GOI.Element3 = 0;

%----------------------------------------
%---------- Solvers
%----------------------------------------

Create DifferentialCorrector DC;
GMAT DC.ShowProgress = true;
GMAT DC.ReportStyle = Normal;
GMAT DC.TargeterTextFile = targeter_DefaultDC.data;
GMAT DC.MaximumIterations = 25;
GMAT DC.UseCentralDifferences = false;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem EarthMJ2000Eq;
GMAT EarthMJ2000Eq.Origin = Earth;
GMAT EarthMJ2000Eq.Axes = MJ2000Eq;
GMAT EarthMJ2000Eq.UpdateInterval = 60;
GMAT EarthMJ2000Eq.OverrideOriginInterval = false;
GMAT EarthMJ2000Eq.Epoch = 21545;


Create CoordinateSystem EarthMJ2000Ec;
GMAT EarthMJ2000Ec.Origin = Earth;
GMAT EarthMJ2000Ec.Axes = MJ2000Ec;
GMAT EarthMJ2000Ec.UpdateInterval = 60;
GMAT EarthMJ2000Ec.OverrideOriginInterval = false;
GMAT EarthMJ2000Ec.Epoch = 21545;


Create CoordinateSystem EarthFixed;
GMAT EarthFixed.Origin = Earth;
GMAT EarthFixed.Axes = BodyFixed;
GMAT EarthFixed.UpdateInterval = 60;
GMAT EarthFixed.OverrideOriginInterval = false;
GMAT EarthFixed.Epoch = 21545;

%----------------------------------------
%---------- Plots/Reports
%----------------------------------------

Create OpenGLPlot OpenGLPlot1;
GMAT OpenGLPlot1.Add = {Earth, Luna, Sun, sat};
GMAT OpenGLPlot1.CoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot1.ViewPointRef = Earth;
GMAT OpenGLPlot1.ViewPointVector = Vector;
GMAT OpenGLPlot1.ViewDirection = Earth;
GMAT OpenGLPlot1.ViewScaleFactor = 10;
GMAT OpenGLPlot1.FixedFovAngle = 45;
GMAT OpenGLPlot1.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot1.ViewUpAxis = X;
GMAT OpenGLPlot1.CelestialPlane = Off;
GMAT OpenGLPlot1.XYPlane = On;
GMAT OpenGLPlot1.WireFrame = Off;
GMAT OpenGLPlot1.TargetStatus = On;
GMAT OpenGLPlot1.Axes = Off;
GMAT OpenGLPlot1.Grid = Off;
GMAT OpenGLPlot1.EarthSunLines = Off;
GMAT OpenGLPlot1.UseInitialView = On;
GMAT OpenGLPlot1.PerspectiveMode = Off;
GMAT OpenGLPlot1.UseFixedFov = Off;
GMAT OpenGLPlot1.DataCollectFrequency = 1;
GMAT OpenGLPlot1.UpdatePlotFrequency = 50;
GMAT OpenGLPlot1.NumPointsToRedraw = 0;
GMAT OpenGLPlot1.ShowPlot = true;

Create ReportFile Data;
GMAT Data.Filename = ./output/SampleMissions/Ex_TargetHohmannTransfer.report;
GMAT Data.Precision = 16;
GMAT Data.WriteHeaders = On;
GMAT Data.ColumnWidth = 20;


%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

% Propagate orbit for specified duration
Report Data sat.A1ModJulian sat.X sat.Y sat.Z sat.VX sat.VY sat.VZ;
GMAT Data.WriteHeaders = Off;
Propagate DefaultProp(sat, {sat.ElapsedSecs = 86400});
Report Data sat.A1ModJulian sat.X sat.Y sat.Z sat.VX sat.VY sat.VZ;

% Propagate orbit to the next Periapsis point
Propagate DefaultProp(sat, {sat.Periapsis});
Report Data sat.A1ModJulian sat.X sat.Y sat.Z sat.VX sat.VY sat.VZ;

% Burn in the velocity direction to reach an alternate Apoapsis point
Target DC;

   %---------------------------------------
   %  Test for use of nonexistent resources
   %---------------------------------------
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, DNE = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = DNE});
   Vary DC(TOI.DNE = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DNE(TOI.V = 0.5, {Perturbation = .001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159}); 
   Vary DC(DNE.V = 0.5, {Perturbation = .001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159}); 
   DNE DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});

   %---------------------------------------
   %  Test for improper use of parameters
   %---------------------------------------

   %---- Improper use of allowed parameters

   %---- Disallowed parameters
   Vary DC(WrongArray = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = WrongArray, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = WrongArray, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = .00001, MaxStep = WrongArray, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = .00001, MaxStep = 0.2, Lower = WrongArray, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = .00001, MaxStep = 0.2, Lower = 0, Upper = WrongArray});
   Vary DC(TOI.V = WrongString, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = WrongString, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = WrongThruster, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = .00001, MaxStep = 0.2, Lower = 0, Upper = WrongThruster});

   %---------------------------------------
   %  Test for improper use of resources
   %---------------------------------------
   Vary WrongSat(TOI.V = 0.5, {Perturbation = .00001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {WrongSat.CoordinateSystem = .0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});

   %---------------------------------------
   %  Test for missing elements
   %---------------------------------------
   % bad error message here ...
   DC(TOI.V = 0.5, {Perturbation = .001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});  %%%%%%%%%%%%%%%%%%%%%%%%%
   Vary DC(TOI.V = 0.5, { = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159}); 
   Vary DC(  = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V =  , {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V   0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper =  });
   Vary DC(TOI.V = 0.5, {Perturbation = , MaxStep = 0.2, Lower = 0, Upper = 3.14159 });
   Vary DC(TOI.V = 0.5, {  = .0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159 });
   % 
   Vary  (TOI.V = 0.5, {Perturbation = .001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159}); %%%%%%%%%%%%%%

   %-------------------------------------------------
   %  Test for improper use of conditional operators
   %-------------------------------------------------
   Vary DC(TOI.V < 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V <= 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V >= 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V == 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V => 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V =< 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V ~= 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation == 0.0001 , MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001 , MaxStep <= 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001 , MaxStep = 0.2, Lower >= 0, Upper = 3.14159});


   %---------------------------------------------------
   %  Test for improper use of brackets and parentheses
   %---------------------------------------------------

   %---  Missing Parenthesis ----
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159};
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159;
   %
   Vary DC TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159}); 
   Vary DCTOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159};  %%% bad error message here

   %---  Missing curly brackets
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper 3.14159);
   %
   Vary DC(TOI.V = 0.5, Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper 3.14159);
   Vary DC(TOI.V = 0.5, Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});

   %--- Mixed incorrect brackets
   Vary DC(TOI.V = 0.5, (Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, [Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159});
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159)); 
   Vary DC(TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159}}; 
   Vary DC[TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159}]; 
   %  These lines cause crashes - not any more
   Vary DC[TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159}); 
   Vary DC{TOI.V = 0.5, {Perturbation = 0.0001, MaxStep = 0.2, Lower = 0, Upper = 3.14159}); 

   %----------------------------------------------------------
   %  Test for improper use of closing branch command statement
   %----------------------------------------------------------
   %  not applicable, Vary is not a branch command

   %--------------------------------
   %-------  Missing Commas    -----
   %--------------------------------
   Vary  DC(TOI.V = 0.5, {Perturbation = .001 , MaxStep = 0.2  Lower = 0, Upper = 3.14159}); 
   Vary  DC(TOI.V = 0.5  {Perturbation = .001 , MaxStep = 0.2 , Lower = 0, Upper = 3.14159}); 
   Vary  DC(TOI.V = 0.5,  {Perturbation = .001 , MaxStep = 0.2 , Lower = 0 Upper = 3.14159}); 

   %---------------------------------------------
   %---   The rest of the mission sequence   ----
   %---------------------------------------------
   Maneuver TOI(sat);
   Propagate DefaultProp(sat, {sat.Apoapsis});
   Achieve DC(sat.Earth.RMAG = 42165, {Tolerance = 0.1});

EndTarget;  % For targeter DC

