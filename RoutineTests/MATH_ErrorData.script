%   This test uses the GMAT script to calculate a rotation
%   matrix using the Euler Axis/Angle approach.  
%   The case is intended to test that GMAT handles complicated equations 
%   that contain products of vectors, matrices, and scalars.
%   My usual disclaimer:  since GMAT currenty doesn't run this 
%   script, I can't be sure it doesn't contain typos, because 
%   I can't test it.


%  Create a report to output error data
Create ReportFile ErrorData;
GMAT ErrorData.Filename = MATH_ErrorData.report;

%   Create variables and arrays that are needed in calculations
Create Variable phi pi2
Create Array across[3,3] I3[3,3] R[3,3] Sol[3,3];
Create Array av[3,1];


%  Define the Euler Axis
GMAT av(1,1) = 0.577350269189626;
GMAT av(2,1) = 0.577350269189626;
GMAT av(3,1) = 0.577350269189626;


%  Define the Euler Angle
GMAT pi2 = 6.28318530717959;
%%Due to Bug 2025 Fix, math operators are no longer allowed, so moved to after BeginMissionSequence
%%GMAT phi = 45 * pi2;


%  Define the skew symmetric matrix
GMAT across(1,1) =  0;
GMAT across(1,2) = -0.577350269189626; %% = -av(3,1); (Due to bug 2043 fix)
GMAT across(1,3) =  0.577350269189626; %% =  av(2,1); (Due to bug 2043 fix)

GMAT across(2,1) =  0.577350269189626; %% =  av(3,1); (Due to bug 2043 fix)
GMAT across(2,2) =  0;
GMAT across(2,3) = -0.577350269189626; %% = -av(1,1); (Due to bug 2043 fix)

GMAT across(3,1) = -0.577350269189626; %% = -av(2,1); (Due to bug 2043 fix)
GMAT across(3,2) =  0.577350269189626; %% =  av(1,1); (Due to bug 2043 fix)
GMAT across(3,3) =  0;


%  Define the 3x3 Identity Matrix
GMAT I3(1,1) = 1;
GMAT I3(1,2) = 0;
GMAT I3(1,3) = 0;

GMAT I3(2,1) = 0;
GMAT I3(2,2) = 1;
GMAT I3(2,3) = 0;

GMAT I3(3,1) = 0;
GMAT I3(3,2) = 0;
GMAT I3(3,3) = 1;


%  Define the solution as calculated in Matlab

Sol(1,1) =  1;
Sol(1,2) =  0.000000000000096;
Sol(1,3) = -0.000000000000096;

Sol(2,1) = -0.000000000000096
Sol(2,2) =  1;
Sol(2,3) =  0.000000000000096

Sol(3,1) =  0.000000000000096;
Sol(3,2) = -0.000000000000096;
Sol(3,3) =  1;


Create Array E[3,3];

%------------------------------------ Mission Sequence

BeginMissionSequence;

GMAT phi = 45 * pi2;

Report ErrorData E;

%  Peform the Euler Axis/Angle calculation
GMAT R = cos(phi)*I3 + (1 - cos(phi))*av*av' - sin(phi)*across;

%  Now difference the GMAT and Matlab solutions
GMAT E = R - Sol;

%  Report the error data.
Report ErrorData R Sol
Report ErrorData E;

%%% Note: It matches better with MSVC++ run
%%% E =
%%%  0  1.945585081073381e-16 -1.945585081073381e-16    
%%% -1.945585081073381e-16  0  1.945585081073381e-16    
%%%  1.945585081073381e-16 -1.945585081073381e-16  0    
