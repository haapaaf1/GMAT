% GMAT Test Script used to validate Interpreters
% Author: Darrel J. Conway, Thinking Systems, Inc.

%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft sat;
GMAT sat.DateFormat = TAIModJulian;
GMAT sat.Epoch = 21600;
GMAT sat.CoordinateSystem = EarthMJ2000Eq;
GMAT sat.DisplayStateType = Cartesian;
GMAT sat.X = 7000;
GMAT sat.Y = 0;
GMAT sat.Z = 2000;
GMAT sat.VX = 0;
GMAT sat.VY = 7.8;
GMAT sat.VZ = 0;
GMAT sat.DryMass = 250;
GMAT sat.Cd = 2.2;
GMAT sat.Cr = 1.8;
GMAT sat.DragArea = 15;
GMAT sat.SRPArea = 1;


%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel fm;
GMAT fm.CentralBody = Earth;
GMAT fm.PointMasses = {Earth, Sun, Luna};
GMAT fm.Drag = None;
GMAT fm.SRP = Off;
GMAT fm.ErrorControl = RSSStep;


%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator prop;
GMAT prop.FM = fm;
GMAT prop.Type = RungeKutta89;
GMAT prop.InitialStepSize = 60;
GMAT prop.Accuracy = 1e-015;
GMAT prop.MinStep = 0.001;
GMAT prop.MaxStep = 2700;
GMAT prop.MaxStepAttempts = 50;


%----------------------------------------
%---------- Parameters
%----------------------------------------

Create Variable var1 
GMAT var1 = 10

Create Array nv[3,1] 
GMAT nv(1, 1) = 10;
GMAT nv(2, 1) = 20;
GMAT nv(3, 1) = 30;

Create A1ModJulian Time
Create X x
Create Y y
Create Z z
Create VX vx
Create VY vy
Create VZ vz
Create TA ta

GMAT Time.Object = sat;
GMAT x.Object = sat;
GMAT y.Object = sat;
GMAT z.Object = sat;
GMAT vx.Object = sat;
GMAT vy.Object = sat;
GMAT vz.Object = sat;
GMAT ta.Object = sat;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem EarthMJ2000Eq;
GMAT EarthMJ2000Eq.Origin = Earth;
GMAT EarthMJ2000Eq.Axes = MJ2000Eq;
GMAT EarthMJ2000Eq.UpdateInterval = 60;
GMAT EarthMJ2000Eq.OverrideOriginInterval = false;

Create CoordinateSystem EarthMJ2000Ec;
GMAT EarthMJ2000Ec.Origin = Earth;
GMAT EarthMJ2000Ec.Axes = MJ2000Ec;
GMAT EarthMJ2000Ec.UpdateInterval = 60;
GMAT EarthMJ2000Ec.OverrideOriginInterval = false;

Create CoordinateSystem EarthFixed;
GMAT EarthFixed.Origin = Earth;
GMAT EarthFixed.Axes = BodyFixed;
GMAT EarthFixed.UpdateInterval = 60;
GMAT EarthFixed.OverrideOriginInterval = false;


%----------------------------------------
%---------- Plots and Reports
%----------------------------------------

Create OpenGLPlot OpenGLPlot1;
GMAT OpenGLPlot1.Add = {sat};
GMAT OpenGLPlot1.OrbitColor = [ 255 ];
GMAT OpenGLPlot1.CoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot1.ViewPointReference = Earth;
GMAT OpenGLPlot1.ViewPointVector = [ 0 0 30000];
GMAT OpenGLPlot1.ViewDirection = Earth;
GMAT OpenGLPlot1.ViewScaleFactor = 1;
GMAT OpenGLPlot1.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot1.ViewUpAxis = Z;
GMAT OpenGLPlot1.CelestialPlane = Off;
GMAT OpenGLPlot1.XYPlane = On;
GMAT OpenGLPlot1.WireFrame = Off;
GMAT OpenGLPlot1.SolverIterations = None;
GMAT OpenGLPlot1.Axes = On;
GMAT OpenGLPlot1.Grid = Off;
GMAT OpenGLPlot1.SunLine = Off;
GMAT OpenGLPlot1.UseInitialView = On;
GMAT OpenGLPlot1.DataCollectFrequency = 1;
GMAT OpenGLPlot1.UpdatePlotFrequency = 50;
GMAT OpenGLPlot1.NumPointsToRedraw = 0;
GMAT OpenGLPlot1.ShowPlot = true;

Create ReportFile rf;
GMAT rf.Filename = IfWhileArrayTest.report;
GMAT rf.Precision = 16;
GMAT rf.WriteHeaders = On;
GMAT rf.LeftJustify = On;
GMAT rf.ZeroFill = Off;
GMAT rf.ColumnWidth = 20;
GMAT rf.SolverIterations = None;

Create OpenGLPlot OpenGLPlot2;
GMAT OpenGLPlot2.Add = {sat};
GMAT OpenGLPlot2.OrbitColor = [ 255 ];
GMAT OpenGLPlot2.CoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot2.ViewPointReference = Earth;
GMAT OpenGLPlot2.ViewPointVector = [ 0 0 30000];
GMAT OpenGLPlot2.ViewDirection = Earth;
GMAT OpenGLPlot2.ViewScaleFactor = 1;
GMAT OpenGLPlot2.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot2.ViewUpAxis = X;
GMAT OpenGLPlot2.CelestialPlane = Off;
GMAT OpenGLPlot2.XYPlane = On;
GMAT OpenGLPlot2.WireFrame = Off;
GMAT OpenGLPlot2.SolverIterations = None;
GMAT OpenGLPlot2.Axes = On;
GMAT OpenGLPlot2.Grid = Off;
GMAT OpenGLPlot2.SunLine = Off;
GMAT OpenGLPlot2.UseInitialView = On;
GMAT OpenGLPlot2.DataCollectFrequency = 1;
GMAT OpenGLPlot2.UpdatePlotFrequency = 50;
GMAT OpenGLPlot2.NumPointsToRedraw = 0;
GMAT OpenGLPlot2.ShowPlot = true;

Create XYPlot XYPlot1;
GMAT XYPlot1.XVariable = sat.A1ModJulian;
GMAT XYPlot1.YVariables = {sat.EarthMJ2000Eq.X};
GMAT XYPlot1.ShowGrid = true;
GMAT XYPlot1.SolverIterations = None;
GMAT XYPlot1.ShowPlot = true;

Create XYPlot XYPlot2;
GMAT XYPlot2.XVariable = sat.A1ModJulian;
GMAT XYPlot2.YVariables = {sat.EarthMJ2000Eq.Y};
GMAT XYPlot2.ShowGrid = true;
GMAT XYPlot2.SolverIterations = None;
GMAT XYPlot2.ShowPlot = true;


%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

% Mission Sequence
Propagate prop(sat) {sat.ElapsedDays = 1.500};

%%%Report rf sat.TA;
%%%If ta <= 180.0
%%%   Save sat;
%%%   While ta > 180.0
%%%      Propagate prop(sat, {sat.ElapsedDays = 1.500});
%%%   EndWhile
%%%   Report rf ta;
%%%EndIf
If nv(3,1) > 0
   Report rf nv(3,1) 
EndIf;


If nv(3,1) > nv(2,1)
   Report rf nv(3,1) nv(2,1) 
EndIf;


If ta <= nv(1,1) | nv(3,1) > 0.0
   Report rf ta nv(3,1) 
EndIf;


%<<<This line cannot be parsed with old interpreter>>>
%%%If (ta<=nv(1,1)|nv(3,1)>0.0&var1==10)
%%%   Report rf ta nv(3,1);
%%%EndIf
While nv(1,1) > nv(2,1)
   Report rf nv(1,1) nv(2,1) 
EndWhile;


