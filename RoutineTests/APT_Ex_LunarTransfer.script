%  Script Mission - Lunar Transfer Example
%
%  This script demonstrates how to set up a lunar transfer mission
%
%  REVSION HISTORY
%  $Id: APT_Ex_LunarTransfer.script,v 1.1 2008/09/26 17:03:53 ljun Exp $


%**************************************************************************
%************ Create Objects for Use in Mission Sequence ******************
%**************************************************************************


%--------------------------------------------------------------------------
%----------------- SpaceCraft, Formations, Constellations -----------------
%--------------------------------------------------------------------------


Create Spacecraft MMSRef;
GMAT MMSRef.DateFormat = UTCGregorian;
GMAT MMSRef.Epoch = '22 Jul 2014 11:29:10.811';
GMAT MMSRef.CoordinateSystem = EarthMJ2000Eq;
GMAT MMSRef.DisplayStateType = Cartesian;
GMAT MMSRef.X = -137380.1984338506;
GMAT MMSRef.Y = 75679.87867537055;
GMAT MMSRef.Z = 21487.63875187856;
GMAT MMSRef.VX = -0.2324532014235503;
GMAT MMSRef.VY = -0.4462753967758019;
GMAT MMSRef.VZ = 0.08561205662877103;
GMAT MMSRef.DryMass = 1000;
GMAT MMSRef.Cd = 2.2;
GMAT MMSRef.Cr = 1.7;
GMAT MMSRef.DragArea = 15;
GMAT MMSRef.SRPArea = 1;
GMAT MMSRef.NAIFId = -123456789;
GMAT MMSRef.NAIFIdReferenceFrame = -123456789;
GMAT MMSRef.Id = 'SatId';
GMAT MMSRef.Attitude = CoordinateSystemFixed;
%GMAT MMSRef.ModelFile = 'C:\Users\sphughe1\Desktop\GMAT_Executable\files\models\cassini.3ds';
GMAT MMSRef.ModelOffsetX = 1;
GMAT MMSRef.ModelOffsetY = 0;
GMAT MMSRef.ModelOffsetZ = 0;
GMAT MMSRef.ModelRotationX = 0;
GMAT MMSRef.ModelRotationY = 0;
GMAT MMSRef.ModelRotationZ = 0;
%GMAT MMSRef.ModelScale = 1631.770629882813;
GMAT MMSRef.ModelScale = 1;
GMAT MMSRef.AttitudeDisplayStateType = 'Quaternion';
GMAT MMSRef.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT MMSRef.AttitudeCoordinateSystem = 'EarthMJ2000Eq';
GMAT MMSRef.Q1 = 0;
GMAT MMSRef.Q2 = 0;
GMAT MMSRef.Q3 = 0;
GMAT MMSRef.Q4 = 1;
GMAT MMSRef.EulerAngleSequence = '312';
GMAT MMSRef.AngularVelocityX = 0;
GMAT MMSRef.AngularVelocityY = 0;
GMAT MMSRef.AngularVelocityZ = 0;

Create CoordinateSystem EarthSunRot;
GMAT EarthSunRot.Origin = Earth;
GMAT EarthSunRot.J2000Body = Earth;
GMAT EarthSunRot.Axes = ObjectReferenced;
%%GMAT EarthSunRot.Epoch = 21545.000000397937; %% 2012.11.15 This no longer allowed, only allowed in MOE* and TOE*
GMAT EarthSunRot.UpdateInterval = 60;
GMAT EarthSunRot.XAxis = R;
GMAT EarthSunRot.ZAxis = N;
GMAT EarthSunRot.Primary = Sun;
GMAT EarthSunRot.Secondary = Earth;

%--------------------------------------------------------------------------
%--------------------------------- Burns ----------------------------------
%--------------------------------------------------------------------------

Create ImpulsiveBurn LSI;
GMAT LSI.Origin = Earth;
GMAT LSI.Axes = VNB;
GMAT LSI.Element1 = 0.14676929889000001;
GMAT LSI.Element2 = 0.046042675892;
GMAT LSI.Element3 = 0.090223244096999999;


Create ImpulsiveBurn ALM;
GMAT ALM.Origin = Earth;
GMAT ALM.Axes = VNB;
GMAT ALM.Element1 = -0.3198120104;

Create ImpulsiveBurn LOI
GMAT LOI.Origin = Luna;
GMAT LOI.Axes   = VNB;
GMAT LOI.Element1 = -0.652;

%--------------------------------------------------------------------------
%------------------------------ Propagators -------------------------------
%--------------------------------------------------------------------------

Create ForceModel LunarSB_ForceModel;
GMAT LunarSB_ForceModel.CentralBody = Earth;
GMAT LunarSB_ForceModel.PointMasses = {Earth, Sun, Luna};
GMAT LunarSB_ForceModel.Drag = None;
GMAT LunarSB_ForceModel.SRP = Off;
GMAT LunarSB_ForceModel.ErrorControl = RSSStep;

Create Propagator LunarSB;
GMAT LunarSB.FM = LunarSB_ForceModel;
GMAT LunarSB.Type = RungeKutta89;
GMAT LunarSB.InitialStepSize = 60;
GMAT LunarSB.Accuracy = 1e-011;
GMAT LunarSB.MinStep = 0.001;
GMAT LunarSB.MaxStep = 45000;
GMAT LunarSB.MaxStepAttempts = 50;

Create ForceModel MoonCentered_ForceModel;
GMAT MoonCentered_ForceModel.CentralBody = Luna;
GMAT MoonCentered_ForceModel.PointMasses = {Earth, Sun, Luna};
GMAT MoonCentered_ForceModel.Drag = None;
GMAT MoonCentered_ForceModel.SRP = Off;
GMAT MoonCentered_ForceModel.ErrorControl = RSSStep;

Create Propagator MoonCentered;
GMAT MoonCentered.FM = MoonCentered_ForceModel;
GMAT MoonCentered.Type = RungeKutta89;
GMAT MoonCentered.InitialStepSize = 60;
GMAT MoonCentered.Accuracy = 1e-011;
GMAT MoonCentered.MinStep = 0.001;
GMAT MoonCentered.MaxStep = 15000;
GMAT MoonCentered.MaxStepAttempts = 50;


GMAT SolarSystem.EphemerisUpdateInterval = 0.0

%--------------------------------------------------------------------------
%-------------------------------- Solvers ---------------------------------
%--------------------------------------------------------------------------

Create DifferentialCorrector DC1;
GMAT DC1.ShowProgress = true;
GMAT DC1.ReportStyle = Normal;
GMAT DC1.ReportFile = APT_Ex_LunarTransfer-DC1.data;
GMAT DC1.MaximumIterations = 25;
GMAT DC1.DerivativeMethod = CentralDifference;

%--------------------------------------------------------------------------
%-------------------------- Plots and Reports -----------------------------
%--------------------------------------------------------------------------


Create Enhanced3DView OGL_EarthMJ2K;
GMAT OGL_EarthMJ2K.SolverIterations = None;
GMAT OGL_EarthMJ2K.Add = {MMSRef, Earth, Luna};
GMAT OGL_EarthMJ2K.OrbitColor = [ 255 32768 12632256 ];
GMAT OGL_EarthMJ2K.TargetColor = [ 8421440 0 0 ];
GMAT OGL_EarthMJ2K.CoordinateSystem = EarthMJ2000Eq;
GMAT OGL_EarthMJ2K.ViewPointReference = Earth;
GMAT OGL_EarthMJ2K.ViewPointVector = [ 500000 500000 500000 ];
GMAT OGL_EarthMJ2K.ViewDirection = Earth;
GMAT OGL_EarthMJ2K.ViewScaleFactor = 1;
GMAT OGL_EarthMJ2K.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT OGL_EarthMJ2K.ViewUpAxis = Z;
GMAT OGL_EarthMJ2K.CelestialPlane = Off;
GMAT OGL_EarthMJ2K.XYPlane = Off;
GMAT OGL_EarthMJ2K.WireFrame = Off;
GMAT OGL_EarthMJ2K.Axes = On;
GMAT OGL_EarthMJ2K.Grid = Off;
GMAT OGL_EarthMJ2K.SunLine = Off;
GMAT OGL_EarthMJ2K.UseInitialView = On;
GMAT OGL_EarthMJ2K.DataCollectFrequency = 1;
GMAT OGL_EarthMJ2K.UpdatePlotFrequency = 50;
GMAT OGL_EarthMJ2K.NumPointsToRedraw = 0;
GMAT OGL_EarthMJ2K.ShowPlot = true;


Create Enhanced3DView OGL_MoonMJ2K;
GMAT OGL_MoonMJ2K.SolverIterations = Current;
%%GMAT OGL_MoonMJ2K.SolverIterations = All;
%%GMAT OGL_MoonMJ2K.SolverIterations = None;
GMAT OGL_MoonMJ2K.Add = {MMSRef, Earth, Luna};
GMAT OGL_MoonMJ2K.CoordinateSystem = MoonMJ2000Eq;
GMAT OGL_MoonMJ2K.ViewPointReference = Luna;
GMAT OGL_MoonMJ2K.ViewPointVector = [ 0 0 30000 ];
GMAT OGL_MoonMJ2K.ViewDirection = Luna;
GMAT OGL_MoonMJ2K.ViewScaleFactor = 1;
GMAT OGL_MoonMJ2K.ViewUpCoordinateSystem = MoonMJ2000Eq;
GMAT OGL_MoonMJ2K.ViewUpAxis = X;
GMAT OGL_MoonMJ2K.CelestialPlane = Off;
GMAT OGL_MoonMJ2K.XYPlane = On;
GMAT OGL_MoonMJ2K.WireFrame = Off;
GMAT OGL_MoonMJ2K.Axes = On;
GMAT OGL_MoonMJ2K.SunLine = Off;
GMAT OGL_MoonMJ2K.DataCollectFrequency = 1;
GMAT OGL_MoonMJ2K.UpdatePlotFrequency = 50;
GMAT OGL_MoonMJ2K.NumPointsToRedraw = 0;
GMAT OGL_MoonMJ2K.ShowPlot = true;


Create Enhanced3DView OGL_EarthMoonRot;
GMAT OGL_EarthMoonRot.SolverIterations = Current;
GMAT OGL_EarthMoonRot.Add = {MMSRef, Earth, Luna, Sun};
GMAT OGL_EarthMoonRot.OrbitColor = [ 255 32768 12632256 4227327 ];
GMAT OGL_EarthMoonRot.TargetColor = [ 8421440 0 0 0 ];
GMAT OGL_EarthMoonRot.CoordinateSystem = EarthMoonRot;
GMAT OGL_EarthMoonRot.ViewPointReference = Luna;
GMAT OGL_EarthMoonRot.ViewPointVector = [ 300000 300000 300000 ];
GMAT OGL_EarthMoonRot.ViewDirection = Luna;
GMAT OGL_EarthMoonRot.ViewScaleFactor = 2;
GMAT OGL_EarthMoonRot.ViewUpCoordinateSystem = EarthMoonRot;
GMAT OGL_EarthMoonRot.ViewUpAxis = X;
GMAT OGL_EarthMoonRot.CelestialPlane = Off;
GMAT OGL_EarthMoonRot.XYPlane = Off;
GMAT OGL_EarthMoonRot.WireFrame = Off;
GMAT OGL_EarthMoonRot.Axes = On;
GMAT OGL_EarthMoonRot.Grid = Off;
GMAT OGL_EarthMoonRot.SunLine = On;
GMAT OGL_EarthMoonRot.UseInitialView = On;
GMAT OGL_EarthMoonRot.DataCollectFrequency = 1;
GMAT OGL_EarthMoonRot.UpdatePlotFrequency = 50;
GMAT OGL_EarthMoonRot.NumPointsToRedraw = 0;
GMAT OGL_EarthMoonRot.ShowPlot = true;


Create XYPlot RadApoPlot
GMAT RadApoPlot.XVariable = MMSRef.CurrA1MJD;
GMAT RadApoPlot.YVariables = { MMSRef.RMAG };
GMAT RadApoPlot.ShowGrid = true;
GMAT RadApoPlot.SolverIterations = None;
GMAT RadApoPlot.ShowPlot = true;

Create ReportFile Data;
GMAT Data.Filename = APT_Ex_LunarTransfer.report;
GMAT Data.Precision = 16
GMAT Data.WriteHeaders = On;
GMAT Data.ColumnWidth = 20;

%--------------------------------------------------------------------------
%-------------------------- Coordinate Systems ----------------------------
%--------------------------------------------------------------------------

Create CoordinateSystem MoonMJ2000Eq;
GMAT MoonMJ2000Eq.Origin = Luna;
GMAT MoonMJ2000Eq.Axes = MJ2000Eq;

Create CoordinateSystem EarthMoonRot;
GMAT EarthMoonRot.Origin = Luna;
GMAT EarthMoonRot.Axes = ObjectReferenced;
GMAT EarthMoonRot.XAxis = R;
GMAT EarthMoonRot.ZAxis = N;
GMAT EarthMoonRot.Primary = Earth;
GMAT EarthMoonRot.Secondary = Luna;

%**************************************************************************
%**************************The Mission Sequence****************************
%**************************************************************************

BeginMissionSequence;

Toggle RadApoPlot Off;

%------------------------------
%  Propagate to Earth periapsis
%------------------------------
Report Data MMSRef.A1ModJulian MMSRef.X MMSRef.Y MMSRef.Z MMSRef.VX MMSRef.VY MMSRef.VZ;
GMAT Data.WriteHeaders = Off;
Propagate LunarSB(MMSRef, {MMSRef.Periapsis});
Report Data MMSRef.A1ModJulian MMSRef.X MMSRef.Y MMSRef.Z MMSRef.VX MMSRef.VY MMSRef.VZ;

%------------------------------
%  Target Lunar B-plane
%------------------------------
Target DC1

     Vary DC1(LSI.Element1 = 0.1462 , {Perturbation = 1e-005, MaxStep = .01, Lower = .13, Upper = .5});
     Vary DC1(LSI.Element3 = 0.1086 , {Perturbation = 1e-005, MaxStep = .01, Lower = -.5, Upper = .5});

     Maneuver LSI(MMSRef);
     
     Propagate LunarSB(MMSRef, {MMSRef.ElapsedDays = 1.5});
     Propagate MoonCentered(MMSRef, {MMSRef.Luna.Periapsis});

     Achieve DC1(MMSRef.MoonMJ2000Eq.BdotT = 15000.4401777 , {Tolerance = 3}); 
     Achieve DC1(MMSRef.MoonMJ2000Eq.BdotR = 4000.59308992  , {Tolerance = 3}); 

EndTarget
Report Data MMSRef.A1ModJulian MMSRef.X MMSRef.Y MMSRef.Z MMSRef.VX MMSRef.VY MMSRef.VZ;

%------------------------------
% Target to orbit the Moon
%------------------------------
Target DC1

     Vary DC1(LOI.Element1 = -0.65198120104, {Perturbation = 1e-003, MaxStep = .3, Lower = -3, Upper = 0});

     Maneuver LOI(MMSRef);
     Propagate MoonCentered(MMSRef, {MMSRef.Luna.Periapsis});

     Achieve DC1(MMSRef.MoonMJ2000Eq.VMAG = 1, {Tolerance = 0.01}); 

EndTarget
Report Data MMSRef.A1ModJulian MMSRef.X MMSRef.Y MMSRef.Z MMSRef.VX MMSRef.VY MMSRef.VZ;

%------------------------------
% Propagate for a few days
%------------------------------
Toggle RadApoPlot On;

Propagate MoonCentered(MMSRef, {MMSRef.ElapsedDays = 15});
Save Earth;
Report Data MMSRef.A1ModJulian MMSRef.X MMSRef.Y MMSRef.Z MMSRef.VX MMSRef.VY MMSRef.VZ;
