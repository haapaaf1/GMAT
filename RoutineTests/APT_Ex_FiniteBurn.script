%  Script Mission - Finite Burn Examples  
%
%  This script demonstrates how to set up tanks and thrusters, and use them
%  in a finite maneuver sequence.  
%
%  REVSION HISTORY
%  $Id: Ex_FiniteBurn.script,v 1.4 2007/07/26 19:12:57 edove Exp $


% -------------------------------------------------------------------------
% --------------------------- Create Objects ------------------------------
% -------------------------------------------------------------------------

%  Create a default spacecraft
Create Spacecraft Sc;

%  Create a fuel tank and name it tank1
%          Here we create a fuel tank and set up its physical properties
%          including Temperature, Fuel Mass, Fuel Density etc.
Create FuelTank tank1
GMAT tank1.Temperature = 20.0;
GMAT tank1.RefTemperature = 12.0;
GMAT tank1.FuelMass = 725;
GMAT tank1.FuelDensity = 1029;
GMAT tank1.Pressure = 1200.0;
GMAT tank1.Volume = 0.8;
GMAT tank1.PressureRegulated = true;

%  Create a thruster
%         Here we create a thruster and tell the thruster which tank to
%         draw fuel from.  We also set up the direction of the thruster.
%         Currently, you specify the thruster orientation with respect to
%         the spacecraft VNB or EarthMJ2000Eq systems.  This will change
%         when attitude capabilities are added to GMAT.
Create Thruster engine1
GMAT engine1.Tank = {tank1};
%%GMAT engine1.CoordinateSystem = EarthMJ2000Eq;
%%GMAT engine1.CoordinateSystem = Local;
%%GMAT engine1.Origin = Earth;
%%GMAT engine1.Axes = VNB;
GMAT engine1.C1 = 400;
GMAT engine1.C2 = 0.15;
GMAT engine1.C3 = 0.0;

GMAT engine1.K1 = 1500;
GMAT engine1.K3 = 0.000451;
GMAT engine1.Element1 = 1.0;
GMAT engine1.Element2 = 2.0;
GMAT engine1.Element3 = 2.0;
GMAT engine1.ThrustScaleFactor = .3;

%  Here we attach the tanks and thrusters created above to the spacecraft
GMAT Sc.Tanks = {tank1}
GMAT Sc.Thrusters = {engine1};

%  Create a thruster
%         Here we create a finite maneuver.  We create the maneuver and
%         give it a name first.  We need to tell the maneuver which
%         thrusters to use, and which tank to draw from.  Currently you can
%         have multiple thrusters, but only one tank, from which both
%         thrusters draw fuel.  We can also apply a burn scale factor.  The
%         thrust from each thruster is added together, and the sum is
%         multiplied by BurnScaleFactor.
Create FiniteBurn fb;
GMAT fb.Thrusters = {engine1};
GMAT fb.Tanks = {tank1};
GMAT fb.Axes = VNB;
GMAT fb.BurnScaleFactor = .01;

%  Create a force model
Create ForceModel fm;
GMAT fm.PointMasses = {Earth, Sun, Luna};

%  Create a propagator
Create Propagator prop;
GMAT prop.FM = fm;

%  Create a report file
Create ReportFile rf;
GMAT rf.Filename = APT_Ex_FiniteBurn.report;
GMAT rf.Precision = 16;
GMAT rf.Add = {Sc.ElapsedSecs, Sc.X, Sc.Y, Sc.Z, Sc.SMA, Sc.Energy};

%  Create an XYPlot  
Create XYPlot energy
GMAT energy.IndVar = Sc.CurrA1MJD;
GMAT energy.Add    = Sc.Energy;
GMAT energy.Grid   = On;

Create XYPlot SMAvsTime
GMAT SMAvsTime.IndVar = Sc.CurrA1MJD;
GMAT SMAvsTime.Add = Sc.SMA;
GMAT SMAvsTime.Grid = On;

Create XYPlot INCvsTime
GMAT INCvsTime.IndVar = Sc.CurrA1MJD;
GMAT INCvsTime.Add = Sc.INC;
GMAT INCvsTime.Grid = On;

%  Create an OpenGL Plot  
Create OpenGLPlot SatOpenGL
GMAT SatOpenGL.Add = {Sc, Earth};
GMAT SatOpenGL.ViewScaleFactor = 4;
GMAT SatOpenGL.XYPlane = On;
GMAT SatOpenGL.ViewPointVectorVector = [ 10000 10000 10000];

% -------------------------------------------------------------------------
% --------------------------- Mission Sequence ----------------------------
% -------------------------------------------------------------------------

BeginMissionSequence;

%  Propagate for 1/10 of a day, without thrusters on.
Propagate prop(Sc, {Sc.ElapsedSecs = 8640});

%  Turn on thrusters....they will remain on through all events until the
%  "EndFiniteBurn fb(Sc)" command is executed.
BeginFiniteBurn fb(Sc);

   %  Propagate for 5 days, while thrusters are turned on.
   Propagate prop(Sc, {Sc.ElapsedDays = 5});
   
%  Turn off thrusters   
EndFiniteBurn fb(Sc);

%  Propagate for 5 days
Propagate prop(Sc, {Sc.ElapsedDays =5});

