
%========================================================================== 
%========================================================================== 
% In this use case, we demonstrate how to simulate two-way range data 
% between a ground station and a single spacecraft. 

%========================================================================== 
%========================================================================== 
%----- Create the Tracking Data File Objects
%========================================================================== 
%========================================================================== 

%----- Create the data file
Create Datafile TwoWayRangeData
TwoWayRangeData.Format      = CCSDS_TDM;
TwoWayRangeData.Filename    = .\StationTrackingData.tdm

%----- Create a range measurement between the station and the spacecraft
Create MeasurementModel RangeMeasurement
RangeMeasurement.ObservationData = TwoWayRangeData;
RangeMeasurement.Type            = TwoWayRange;
RangeMeasurement.Participants    = { Station.GroundTransponder, ODSat.SatTransponder };

%========================================================================== 
%========================================================================== 
%----- Create the Ground Station 
%========================================================================== 
%========================================================================== 
 
%-----  Define the location of the ground station 
Create GroundStation Station;
Station.CentralBody      = Earth;
Station.StateType        = Cartesian;
Station.HorizonReference = Sphere;
Station.X                = -4460.9879936 
Station.Y                =  2682.3627968 
Station.Z                = -3674.6265773 
Station.SensorId         = 'StationId';
Station.Sensors        = {GroundTransponder};

%========================================================================== 
%========================================================================== 
%-------- Create the sensors 
%========================================================================== 
%========================================================================== 
 
%----- Create the transponder for the ground station 
Create Transponder GroundTransponder 
GroundTransponder.Frequency               		= 2.5;      % Ghz 
GroundTransponder.FrequencyMode           		= Constant; % No ramp in frequency. 
GroundTransponder.SensorId                		= 12345; 
%  The transponder location 
GroundTransponder.LocationCoodinateSystem 		= BodyFixed; 
GroundTransponder.X                       		=  1.2; 
GroundTransponder.Y                       		=  2.0; 
GroundTransponder.Z                       		= -2.0;  
%-----  Define the errors to be included 
GroundTransponder.LightTimeModel     			= LineofSight;  %  Choices:  None, Line-of-Sight
GroundTransponder.TroposphereModel   			= Hopfield; 
GroundTransponder.IonosphereModel    			= ISI2001; 
GroundTransponder.RangeErrorModel.Type   		= FirstOrderGaussMarkov;
GroundTransponder.RangeErrorModel.InitialBias 	= .01;
GroundTransponder.RangeErrorModel.TimeConstant 	= 1000;

%----- Create the transponder for the Spacecraft
Create Transponder SatTransponder 
SatTransponder.Frequency               		= 2.5;      % Ghz 
SatTransponder.FrequencyMode           		= Constant; % No ramp in frequency. 
SatTransponder.SensorId                		= 67890; 
%  The transponder location 
SatTransponder.LocationCoodinateSystem 		= BodyFixed; 
SatTransponder.X                       		=  1.2; 
SatTransponder.Y                       		=  2.0; 
SatTransponder.Z                       		= -2.0; 
%-----  Define the errors to be included 
SatTransponder.LightTimeModel     			= LineofSight;  %  Choices:  None, Line-of-Sight
SatTransponder.TroposphereModel   			= Hopfield; 
SatTransponder.IonosphereModel    			= ISI2001; 
SatTransponder.RangeErrorModel.Type   		= FirstOrderGaussMarkov;
SatTransponder.RangeErrorModel.InitialBias 	= .01;
SatTransponder.RangeErrorModel.TimeConstant = 5400;

%========================================================================== 
%========================================================================== 
%-------- Create the spacecraft and set its initial conditions 
%========================================================================== 
%========================================================================== 
 
%  Set up the initial Cartesian state, the a-priori covariance, 
%  the mass and physical properties, the initial epoch, and attach sensors. 
 
Create Spacecraft ODSat; 
ODSat.DateFormat       					= UTCGregorian; 
ODSat.Epoch            					= 01 Jan 2008 12:00:00.000 ; 
ODSat.CoordinateSystem 					= EarthMJ2000Eq; 
ODSat.DisplayStateType 					= Cartesian; 
ODSat.Id     					= 23456; 
ODSat.Sensors          					= {Transponder1}; 
%----- Define the initial cartesian state 
ODSat.X  								= 7100; 
ODSat.Y  								= 0; 
ODSat.Z  								= 1300; 
ODSat.VX 								= 0; 
ODSat.VY 								= 7.35; 
ODSat.VZ 								= 1; 
%----- Define guesses for the physical properties 
ODSat.DryMass  						    = 850; 
ODSat.Cd       						    = 2.2; 
ODSat.Cr       						    = 1.8; 
ODSat.DragArea 					     	= 15; 
ODSat.SRPArea  					    	= 1; 
ODSat.Sensors                           = {SatTransponder};
 
%========================================================================== 
%========================================================================== 
%------- Create the propagator that the estimation process will use 
%========================================================================== 
%========================================================================== 
 
%  Define the integrator and force model
Create ForceModel ODprop_FM; 
Create Propagator ODprop; 
ODprop_FM.CentralBody    = Earth; 
ODprop_FM.PointMasses    = {Earth, Sun, Luna}; 
ODprop_FM.Drag           = None; 
ODprop_FM.SRP            = Off; 
ODprop.FM              	 = ODprop_FM; 
ODprop.Type            	 = PrinceDormand78; 
ODprop.InitialStepSize 	 = 60; 
ODprop.Accuracy        	 = 1e-12; 
ODprop.MinStep         	 = 0.000001; 
ODprop.MaxStep         	 = 86400; 
ODprop.MaxStepAttempts 	 = 50; 

%========================================================================== 
%========================================================================== 
%-----  Simulation parameters 
%========================================================================== 
%========================================================================== 
 
Create Simulator MeasSim
MeasSim.Measurements        = {TwoWayRangeData};
MeasSim.Propagator          = ODProp;
MeasSim.InitialEpochFormat  = UTCGregorian;
MeasSim.InitialEpoch        = '01 Jan 2008 12:00:00.000 ';
MeasSim.FinalEpochFormat    = UTCGregorian;
MeasSim.FinalEpoch          = '03 Jan 2008 12:00:00.000 ';
MeasSim.MeasurementTimeStep = 100;

%========================================================================== 
%========================================================================== 
%----- Solve the problem 
%========================================================================== 
%========================================================================== 
 
RunSimulator MeasSim;
