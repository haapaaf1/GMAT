% Script Test Case for Simulation using a USNTrackingSystem
Earth.NutationUpdateInterval = 0;
%--------------------------------------------
%---------- Spacecraft
%--------------------------------------------
Create Spacecraft ODSat InitSat;
ODSat.DateFormat = UTCGregorian;
ODSat.Epoch = '01 Mar 2005 00:00:00.000';
ODSat.CoordinateSystem = EarthMJ2000Eq;
ODSat.DisplayStateType = Cartesian;
ODSat.X = 6648.937;
ODSat.Y = -335.169;
ODSat.Z = 2789.137;
ODSat.VX = -0.34697109;
ODSat.VY = 7.092177415;
ODSat.VZ = 2.14549075;
ODSat.DryMass = 850;
ODSat.Cd = 2.2;
ODSat.Cr = 1.8;
ODSat.DragArea = 15;
ODSat.SRPArea = 1;
ODSat.Id = 'ODSat01';

Create Spacecraft topoSat
topoSat.DateFormat = A1ModJulian;
topoSat.CoordinateSystem = EarthFixed
topoSat.X = -4450.7999999791952
topoSat.Y =  2676.09999998748950
topoSat.Z = -3691.3799999826280;

%topoSat.X = -4450.799344917074;
%topoSat.Y = 2676.102606173266;
%topoSat.Z = -3691.380276426538;
 
%----------------------------------------
%---------- GroundStations
%----------------------------------------
%Create GroundStation Maui;
%Maui.CentralBody = Earth;
%Maui.StateType = Cartesian;
%Maui.HorizonReference = Sphere;
%Maui.X = -4450.8;
%Maui.Y = 2676.1;
%Maui.Z = -3691.38;
%Maui.Id = 'Maui';

Create GroundStation Maui;
Maui.CentralBody = Earth;
Maui.StateType = Spherical;
Maui.HorizonReference = Ellipsoid;
Maui.Latitude = -35.586612725;
Maui.Longitude = 148.983076735;
Maui.Altitude = 0.675012
Maui.Id = 'Maui';



%----------------------------------------
%---------- ForceModels
%----------------------------------------
Create ForceModel ODProp_ForceModel;
ODProp_ForceModel.CentralBody = Earth;
%ODProp_ForceModel.PointMasses = {Sun, Earth, Luna};
ODProp_ForceModel.PointMasses = {Earth};
ODProp_ForceModel.Drag = None;
ODProp_ForceModel.SRP = Off;
ODProp_ForceModel.ErrorControl = RSSStep;

%----------------------------------------
%---------- Propagators
%----------------------------------------
Create Propagator ODProp;
ODProp.FM = ODProp_ForceModel;
ODProp.Type = RungeKutta89;
ODProp.InitialStepSize = 60;
ODProp.Accuracy = 1e-13;
ODProp.MinStep = 0;
ODProp.MaxStep = 2700;
ODProp.MaxStepAttempts = 50;

%----------------------------------------
%---------- Datafiles
%----------------------------------------
Create DataFile MauiMeasData;
MauiMeasData.Filename = 'LEO_USNTwoWayRange.gmd';
MauiMeasData.Format = GMATInternal;

%----------------------------------------
%---------- MeasurementModels
%----------------------------------------
Create MeasurementModel RangeMeasurement;
RangeMeasurement.ObservationData = {MauiMeasData};
RangeMeasurement.Type = USNTwoWayRange;
RangeMeasurement.Participants = {Maui, ODSat};
RangeMeasurement.Bias = 0;
RangeMeasurement.NoiseSigma = 1e-05;
RangeMeasurement.TimeConstant = 6000;
RangeMeasurement.Covariance.Bias = [1000000];

Create OpenGLPlot OpenGLPlot1;
GMAT OpenGLPlot1.SolverIterations = Current;
GMAT OpenGLPlot1.Add = {ODSat, Earth};
GMAT OpenGLPlot1.OrbitColor = [ 255 32768 ];
GMAT OpenGLPlot1.TargetColor = [ 8421440 0 ];
GMAT OpenGLPlot1.CoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot1.ViewPointReference = Earth;
GMAT OpenGLPlot1.ViewPointVector = [ 0 0 30000 ];
GMAT OpenGLPlot1.ViewDirection = Earth;
GMAT OpenGLPlot1.ViewScaleFactor = 1;
GMAT OpenGLPlot1.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT OpenGLPlot1.ViewUpAxis = Z;
GMAT OpenGLPlot1.CelestialPlane = Off;
GMAT OpenGLPlot1.XYPlane = On;
GMAT OpenGLPlot1.WireFrame = Off;
GMAT OpenGLPlot1.Axes = On;
GMAT OpenGLPlot1.Grid = Off;
GMAT OpenGLPlot1.SunLine = Off;
GMAT OpenGLPlot1.UseInitialView = On;
GMAT OpenGLPlot1.DataCollectFrequency = 1;
GMAT OpenGLPlot1.UpdatePlotFrequency = 50;
GMAT OpenGLPlot1.NumPointsToRedraw = 0;
GMAT OpenGLPlot1.ShowPlot = true;


%----------------------------------------
%---------- Tracking Systems
%----------------------------------------
Create USNTrackingSystem USNTracker
USNTracker.Add = {RangeMeasurement}

Create ReportFile rf
rf.WriteHeaders = Off;
Create Variable measEpochA1  stationX stationY stationZ diff tau speedOfLight timediff oldtau
Create Variable oldRange propEpoch range downLinkRange transponderDelay upLinkRange twoWayRange
Create Variable transmitDelay receiveDelay factor

Create String newIteration theSolution DownLinkSolution StartData
DownLinkSolution = '+++++ Downlink Solution +++++'
StartData        = '------- Initial Data  -------'
newIteration =     '------- new Iteration -------'
theSolution  =     '======== The Solution ======='

%----------------------------------------
%---------- Solvers
%----------------------------------------
BeginMissionSequence
                   
measEpochA1      = 23431.02120409296;
%measEpochA1      = 23433.36148187942
%measEpochA1      = 23431.10037075831;
%measEpochA1      = 23431.17606520149;
%measEpochA1      = 23432.08092629752;
%measEpochA1      = 23433.43509294162;

speedOfLight     = 299792.458;
transponderDelay = 0.0000013;
transmitDelay    = 0.0;
receiveDelay     = 0.0;
factor           = 2090659968.0 / 2.0;

Propagate ODProp(ODSat){ODSat.A1ModJulian = measEpochA1}
topoSat.Epoch = measEpochA1;

%====  Light time solution for downlink leg
diff = 1;
timediff = 1;
InitSat = ODSat;
range = sqrt( (ODSat.X-topoSat.EarthMJ2000Eq.X)^2 + ...
      (ODSat.Y-topoSat.EarthMJ2000Eq.Y)^2 + (ODSat.Z-topoSat.EarthMJ2000Eq.Z)^2 );
tau   = range/speedOfLight;
oldtau = 0.0;

Report rf StartData 
Report rf ODSat.A1ModJulian ODSat.X ODSat.Y ODSat.Z 
Report rf topoSat.A1ModJulian topoSat.EarthMJ2000Eq.X topoSat.EarthMJ2000Eq.Y topoSat.EarthMJ2000Eq.Z
Report rf diff timediff tau range

While diff > 1e-5
%While timediff > 1e-6
   oldRange = range;
   oldtau = tau;
   ODSat    = InitSat;
   propEpoch = measEpochA1 - tau/86400;
   If propEpoch > ODSat.A1ModJulian
      Propagate ODProp(ODSat){ODSat.A1ModJulian = propEpoch}
   EndIf
   If propEpoch < ODSat.A1ModJulian
      Propagate BackProp ODProp(ODSat){ODSat.A1ModJulian = propEpoch}
   EndIf
   range = sqrt( (ODSat.X-topoSat.EarthMJ2000Eq.X)^2 + ...
        (ODSat.Y-topoSat.EarthMJ2000Eq.Y)^2 + (ODSat.Z-topoSat.EarthMJ2000Eq.Z)^2 );
   tau   = range/speedOfLight;
   diff = abs(range - oldRange)*1000;
   timediff = abs(oldtau - tau);
   Report rf newIteration 
   Report rf ODSat.A1ModJulian ODSat.X ODSat.Y ODSat.Z 
   Report rf topoSat.A1ModJulian topoSat.EarthMJ2000Eq.X topoSat.EarthMJ2000Eq.Y topoSat.EarthMJ2000Eq.Z
   Report rf diff tau range
EndWhile
downLinkRange = range;

Report rf DownLinkSolution 
Report rf ODSat.A1ModJulian ODSat.X ODSat.Y ODSat.Z 
Report rf topoSat.A1ModJulian topoSat.EarthMJ2000Eq.X topoSat.EarthMJ2000Eq.Y topoSat.EarthMJ2000Eq.Z
Report rf diff timediff tau range

%====  Light time solution for uplink leg
diff    = 1;
timediff = 1;
range = sqrt( (ODSat.X-topoSat.EarthMJ2000Eq.X)^2 + ...
        (ODSat.Y-topoSat.EarthMJ2000Eq.Y)^2 + (ODSat.Z-topoSat.EarthMJ2000Eq.Z)^2 );
tau     = range/speedOfLight;

measEpochA1 = ODSat.A1ModJulian

While diff > 0.00001   
%While timediff > 1e-6
   oldRange = range;
   oldtau = tau;
   propEpoch = measEpochA1 - tau/86400;
   topoSat.Epoch = propEpoch;
   range = sqrt( (ODSat.X-topoSat.EarthMJ2000Eq.X)^2 + ...
        (ODSat.Y-topoSat.EarthMJ2000Eq.Y)^2 + (ODSat.Z-topoSat.EarthMJ2000Eq.Z)^2 );
   tau   = range/speedOfLight;
   diff = abs(range - oldRange)*1000;
   timediff = abs(oldtau - tau);
   Report rf newIteration 
   Report rf ODSat.A1ModJulian ODSat.X ODSat.Y ODSat.Z 
   Report rf topoSat.A1ModJulian topoSat.EarthMJ2000Eq.X topoSat.EarthMJ2000Eq.Y topoSat.EarthMJ2000Eq.Z
   Report rf diff timediff tau range
EndWhile
upLinkRange = range;

twoWayRange = (transmitDelay + receiveDelay + (upLinkRange + downLinkRange)/speedOfLight) * factor;
Report rf theSolution
rf.WriteHeaders = On;
Report rf upLinkRange downLinkRange twoWayRange
